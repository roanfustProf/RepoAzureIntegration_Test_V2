{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfIntegrationAzureSqlADFTest3"
		},
		"Kv_connection_string_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().ParamUrlKeyVault}"
		},
		"ls_azure_sql_db_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().ParamDataSourceCode"
		},
		"ls_sql_server_db_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().ParamDataSourceCode"
		},
		"SQLAZ-PEP-DEV-02_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/aad81a64-663b-4cf5-9ada-e3d8413031e7/resourceGroups/arsgryandyaeastusdevcorp01/providers/Microsoft.Sql/servers/sqlaz-db-dev-01"
		},
		"SQLAZ-PEP-DEV-02_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"SQLAZ-PEP-DEV-02_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sqlaz-db-dev-01.database.windows.net"
			]
		},
		"SQLAZ-PEP-PRD-02_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/aad81a64-663b-4cf5-9ada-e3d8413031e7/resourceGroups/arsgryandyaeastusprdcorp01/providers/Microsoft.Sql/servers/sqlaz-db-prd-01"
		},
		"SQLAZ-PEP-PRD-02_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"SQLAZ-PEP-PRD-02_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sqlaz-db-prd-01.database.windows.net"
			]
		},
		"SQLAZ-PEP-UAT-02_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2e2ccba2-3075-4acc-b7a4-8c7ee9441977/resourceGroups/arsgrybobappeastusnprd01/providers/Microsoft.Sql/servers/sqlaz-db-uat-01"
		},
		"SQLAZ-PEP-UAT-02_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"SQLAZ-PEP-UAT-02_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sqlaz-db-uat-01.database.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_EjecutarQuerysSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "04_Execute Query SQL",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcDestination",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@pipeline().parameters.ParamExecuteQuery",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "End Execution - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "04_Execute Query SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage2]",
							"storedProcedureParameters": {
								"RunIdPipeline": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "04_Execute Query SQL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat('Se gener√≥ un error en el paso ', pipeline().parameters.ParamExecuteLoadCode)",
								"type": "Expression"
							},
							"errorCode": "0001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcDestination": {
						"type": "string"
					},
					"ParamExecuteQuery": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T16:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoadParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "02_Load ExecuteLoadSequence",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC AdminPackage.ExecuteLoadSequenceADF @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "03_Childs Pipelines",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "02_Load ExecuteLoadSequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('02_Load ExecuteLoadSequence').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[AdminPackage].[ExecutePipeline]",
										"storedProcedureParameters": {
											"CountryCode": {
												"value": {
													"value": "@pipeline().parameters.ParamCountryCode",
													"type": "Expression"
												},
												"type": "String"
											},
											"Enviroment": {
												"value": {
													"value": "@pipeline().parameters.ParamEnvironment",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecuteLoadCode": {
												"value": {
													"value": "@item().SequenceExecuteLoadCode",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azure_sql_db",
										"type": "LinkedServiceReference",
										"parameters": {
											"ParamDataSourceCode": {
												"value": "@pipeline().parameters.ParamdsrcIntegration",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "End Execution - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "03_Childs Pipelines",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage2]",
							"storedProcedureParameters": {
								"RunIdPipeline": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "03_Childs Pipelines",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat('Se gener√≥ un error en el paso ', pipeline().parameters.ParamExecuteLoadCode)",
								"type": "Expression"
							},
							"errorCode": "0001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T16:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoadSecuence')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "02_Load ExecuteLoadSequence",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC AdminPackage.ExecuteLoadSequenceADF @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "03_Childs Pipelines_Sec",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "02_Load ExecuteLoadSequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('02_Load ExecuteLoadSequence').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('varErrorBucle')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set Error",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Execute Pipeline",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "varErrorBucle",
													"value": true
												}
											},
											{
												"name": "Fail1_copy1",
												"type": "Fail",
												"dependsOn": [
													{
														"activity": "Set Error",
														"dependencyConditions": [
															"Succeeded",
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"message": {
														"value": "@concat('Se gener√≥ un error en el paso ', pipeline().parameters.ParamExecuteLoadCode)",
														"type": "Expression"
													},
													"errorCode": "0001"
												}
											},
											{
												"name": "Execute Pipeline",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[AdminPackage].[ExecutePipeline]",
													"storedProcedureParameters": {
														"CountryCode": {
															"value": {
																"value": "@pipeline().parameters.ParamCountryCode",
																"type": "Expression"
															},
															"type": "String"
														},
														"Enviroment": {
															"value": {
																"value": "@pipeline().parameters.ParamEnvironment",
																"type": "Expression"
															},
															"type": "String"
														},
														"ExecuteLoadCode": {
															"value": {
																"value": "@item().SequenceExecuteLoadCode",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_azure_sql_db",
													"type": "LinkedServiceReference",
													"parameters": {
														"ParamDataSourceCode": {
															"value": "@pipeline().parameters.ParamdsrcIntegration",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "End Execution - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "03_Childs Pipelines_Sec",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage2]",
							"storedProcedureParameters": {
								"RunIdPipeline": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "03_Childs Pipelines_Sec",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat('Se gener√≥ un error en el paso ', pipeline().parameters.ParamExecuteLoadCode)",
								"type": "Expression"
							},
							"errorCode": "0001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"variables": {
					"varErrorBucle": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T16:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_CopyData_SqlServer_To_AzureSql_SP_TB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "04_Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.ParamStoredProcedureSource",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@pipeline().parameters.ParamPreCopyScript",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"ParamDataSourceCode": {
										"value": "@pipeline().parameters.ParamdsrcSource",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"schematablename": {
										"value": "@pipeline().parameters.ParamSchemaTableDestination",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.ParamTableDestination",
										"type": "Expression"
									},
									"ParamDataSourceCode": {
										"value": "@pipeline().parameters.ParamdsrcDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "End Execution - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "04_Copy data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage2]",
							"storedProcedureParameters": {
								"RunIdPipeline": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "04_Copy data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat('Se gener√≥ un error en el paso ', pipeline().parameters.ParamExecuteLoadCode)",
								"type": "Expression"
							},
							"errorCode": "0001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcSource": {
						"type": "string"
					},
					"ParamStoredProcedureSource": {
						"type": "string"
					},
					"ParamSchemaTableDestination": {
						"type": "string"
					},
					"ParamTableDestination": {
						"type": "string"
					},
					"ParamdsrcDestination": {
						"type": "string"
					},
					"ParamPreCopyScript": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"variables": {
					"varListParameters": {
						"type": "String",
						"defaultValue": "{}"
					},
					"varParameter": {
						"type": "String"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T16:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinetestpostman')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "USP_INSERT_data_test",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@pipeline().parameters.param_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"VALUE": {
									"value": {
										"value": "@pipeline().parameters.parama_VALUE",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sql_db",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "prd-col-businessapp"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_ID": {
						"type": "string",
						"defaultValue": "1"
					},
					"parama_VALUE": {
						"type": "string",
						"defaultValue": "UNO"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sql_db",
					"type": "LinkedServiceReference",
					"parameters": {
						"ParamDataSourceCode": "prd-col-businessapp"
					}
				},
				"parameters": {
					"schematablename": {
						"type": "string",
						"defaultValue": "0"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "0"
					},
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schematablename",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_server_db",
					"type": "LinkedServiceReference",
					"parameters": {
						"ParamDataSourceCode": "prd-col-yanbalreportsods"
					}
				},
				"parameters": {
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_server_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kv_connection_string')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamUrlKeyVault": {
						"type": "string",
						"defaultValue": "https://kvprdcol.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Kv_connection_string_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "prd-col-businessapp"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Kv_connection_string",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamUrlKeyVault": "https://kvprdcol.vault.azure.net/"
							}
						},
						"secretName": {
							"value": "[parameters('ls_azure_sql_db_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Kv_connection_string')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_server_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "prd-col-yanbalreportsods"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Kv_connection_string",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamUrlKeyVault": "https://kvprdcol.vault.azure.net/"
							}
						},
						"secretName": {
							"value": "[parameters('ls_sql_server_db_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Kv_connection_string')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/SQLAZ-PEP-DEV-02')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('SQLAZ-PEP-DEV-02_properties_privateLinkResourceId')]",
				"groupId": "[parameters('SQLAZ-PEP-DEV-02_properties_groupId')]",
				"fqdns": "[parameters('SQLAZ-PEP-DEV-02_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/SQLAZ-PEP-PRD-02')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('SQLAZ-PEP-PRD-02_properties_privateLinkResourceId')]",
				"groupId": "[parameters('SQLAZ-PEP-PRD-02_properties_groupId')]",
				"fqdns": "[parameters('SQLAZ-PEP-PRD-02_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/SQLAZ-PEP-UAT-02')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('SQLAZ-PEP-UAT-02_properties_privateLinkResourceId')]",
				"groupId": "[parameters('SQLAZ-PEP-UAT-02_properties_groupId')]",
				"fqdns": "[parameters('SQLAZ-PEP-UAT-02_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}